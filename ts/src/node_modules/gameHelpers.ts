export function capitalize(word: string) {
  return word[0].toUpperCase() + word.slice(1);
}

export function generateModalTitles(modalName: string, currentLevel: {name: string, description: string, [key: string]: any}, playMode: string): {title: string, subtitle: string} {
  let output = {title: "", subtitle: ""};
  if (modalName === "levelStart") {
    let {name, description} = currentLevel;
    output.title = name;
    output.subtitle = description;
  }
  else if (modalName === "loadMap") {
    if (playMode === "completed") output.title = "Completed Levels"; 
    else output.title = "Your Maps";
  }
  else if (modalName === "save") output.title = "Save Your Map";
  else if (modalName === "reset") {
    output.title = "Reset Map";
    output.subtitle = "This action cannot be undone";
  } else if (modalName === "settings") {
    output.title = "Settings"
  } else if (modalName === "rulesHelp") {
    output.title = "Gameplay Rules"
  } else if (modalName === "controlsHelp") {
    output.title = "Gameplay Controls"
  } else if (modalName === "saveHelp") {
    output.title = "Designing and Saving"
  }
  return output;
}

export function validateBaseEventTransition(from: TMode | TMode[], current: TMode, event: string) {
  let valid = true;
  if (Array.isArray(from)) {
    if (!from.includes(current)) valid = false;
  } else if (current !== from) valid = false;

  if (!valid) {
    console.error(
      new Error(
        `Attempted invalid state transition - ${event} event must transition from mode "${from}", but mode is currently "${current}"`
      )
    );
  }

  return valid;
}

export function openModal(modalName: TModalName) {
  window.toggleModal(true, modalName);
}

export function noOp () {};